/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { ERC20, ERC20Interface } from "../ERC20";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200179c3803806200179c833981810160405281019062000037919062000361565b816001908162000048919062000631565b5080600290816200005a919062000631565b50620000763368056bc75e2d631000006200007e60201b60201c565b505062000833565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620000f0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000e79062000779565b60405180910390fd5b80600080828254620001039190620007ca565b9250508190555080600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546200015b9190620007ca565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051620001c2919062000816565b60405180910390a35050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200023782620001ec565b810181811067ffffffffffffffff82111715620002595762000258620001fd565b5b80604052505050565b60006200026e620001ce565b90506200027c82826200022c565b919050565b600067ffffffffffffffff8211156200029f576200029e620001fd565b5b620002aa82620001ec565b9050602081019050919050565b60005b83811015620002d7578082015181840152602081019050620002ba565b60008484015250505050565b6000620002fa620002f48462000281565b62000262565b905082815260208101848484011115620003195762000318620001e7565b5b62000326848285620002b7565b509392505050565b600082601f830112620003465762000345620001e2565b5b815162000358848260208601620002e3565b91505092915050565b600080604083850312156200037b576200037a620001d8565b5b600083015167ffffffffffffffff8111156200039c576200039b620001dd565b5b620003aa858286016200032e565b925050602083015167ffffffffffffffff811115620003ce57620003cd620001dd565b5b620003dc858286016200032e565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200043957607f821691505b6020821081036200044f576200044e620003f1565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620004b97fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200047a565b620004c586836200047a565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620005126200050c6200050684620004dd565b620004e7565b620004dd565b9050919050565b6000819050919050565b6200052e83620004f1565b620005466200053d8262000519565b84845462000487565b825550505050565b600090565b6200055d6200054e565b6200056a81848462000523565b505050565b5b8181101562000592576200058660008262000553565b60018101905062000570565b5050565b601f821115620005e157620005ab8162000455565b620005b6846200046a565b81016020851015620005c6578190505b620005de620005d5856200046a565b8301826200056f565b50505b505050565b600082821c905092915050565b60006200060660001984600802620005e6565b1980831691505092915050565b6000620006218383620005f3565b9150826002028217905092915050565b6200063c82620003e6565b67ffffffffffffffff811115620006585762000657620001fd565b5b62000664825462000420565b6200067182828562000596565b600060209050601f831160018114620006a9576000841562000694578287015190505b620006a0858262000613565b86555062000710565b601f198416620006b98662000455565b60005b82811015620006e357848901518255600182019150602085019450602081019050620006bc565b86831015620007035784890151620006ff601f891682620005f3565b8355505b6001600288020188555050505b505050505050565b600082825260208201905092915050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b600062000761601f8362000718565b91506200076e8262000729565b602082019050919050565b60006020820190508181036000830152620007948162000752565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000620007d782620004dd565b9150620007e483620004dd565b9250828201905080821115620007ff57620007fe6200079b565b5b92915050565b6200081081620004dd565b82525050565b60006020820190506200082d600083018462000805565b92915050565b610f5980620008436000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c806370a082311161005b57806370a082311461012957806395d89b4114610159578063a9059cbb14610177578063dd62ed3e146101a757610088565b806306fdde031461008d578063095ea7b3146100ab57806323b872dd146100db578063313ce5671461010b575b600080fd5b6100956101d7565b6040516100a29190610992565b60405180910390f35b6100c560048036038101906100c09190610a4d565b610265565b6040516100d29190610aa8565b60405180910390f35b6100f560048036038101906100f09190610ac3565b6103c5565b6040516101029190610aa8565b60405180910390f35b61011361060c565b6040516101209190610b32565b60405180910390f35b610143600480360381019061013e9190610b4d565b610615565b6040516101509190610b89565b60405180910390f35b61016161062d565b60405161016e9190610992565b60405180910390f35b610191600480360381019061018c9190610a4d565b6106bb565b60405161019e9190610aa8565b60405180910390f35b6101c160048036038101906101bc9190610ba4565b6106d0565b6040516101ce9190610b89565b60405180910390f35b600180546101e490610c13565b80601f016020809104026020016040519081016040528092919081815260200182805461021090610c13565b801561025d5780601f106102325761010080835404028352916020019161025d565b820191906000526020600020905b81548152906001019060200180831161024057829003601f168201915b505050505081565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036102d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102cc90610cb6565b60405180910390fd5b81600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516103b39190610b89565b60405180910390a36001905092915050565b600080600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508281101561048a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048190610d48565b60405180910390fd5b82816104969190610d97565b600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600460008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040516105ef9190610b89565b60405180910390a36106028585856106f5565b9150509392505050565b60006012905090565b60036020528060005260406000206000915090505481565b6002805461063a90610c13565b80601f016020809104026020016040519081016040528092919081815260200182805461066690610c13565b80156106b35780601f10610688576101008083540402835291602001916106b3565b820191906000526020600020905b81548152906001019060200180831161069657829003601f168201915b505050505081565b60006106c83384846106f5565b905092915050565b6004602052816000526040600020602052806000526040600020600091509150505481565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610765576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075c90610e3d565b60405180910390fd5b6000600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050828110156107ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e390610ecf565b60405180910390fd5b82816107f89190610d97565b600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555082600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461088a9190610eef565b925050819055508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040516108ee9190610b89565b60405180910390a360019150509392505050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561093c578082015181840152602081019050610921565b60008484015250505050565b6000601f19601f8301169050919050565b600061096482610902565b61096e818561090d565b935061097e81856020860161091e565b61098781610948565b840191505092915050565b600060208201905081810360008301526109ac8184610959565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006109e4826109b9565b9050919050565b6109f4816109d9565b81146109ff57600080fd5b50565b600081359050610a11816109eb565b92915050565b6000819050919050565b610a2a81610a17565b8114610a3557600080fd5b50565b600081359050610a4781610a21565b92915050565b60008060408385031215610a6457610a636109b4565b5b6000610a7285828601610a02565b9250506020610a8385828601610a38565b9150509250929050565b60008115159050919050565b610aa281610a8d565b82525050565b6000602082019050610abd6000830184610a99565b92915050565b600080600060608486031215610adc57610adb6109b4565b5b6000610aea86828701610a02565b9350506020610afb86828701610a02565b9250506040610b0c86828701610a38565b9150509250925092565b600060ff82169050919050565b610b2c81610b16565b82525050565b6000602082019050610b476000830184610b23565b92915050565b600060208284031215610b6357610b626109b4565b5b6000610b7184828501610a02565b91505092915050565b610b8381610a17565b82525050565b6000602082019050610b9e6000830184610b7a565b92915050565b60008060408385031215610bbb57610bba6109b4565b5b6000610bc985828601610a02565b9250506020610bda85828601610a02565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610c2b57607f821691505b602082108103610c3e57610c3d610be4565b5b50919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000610ca060228361090d565b9150610cab82610c44565b604082019050919050565b60006020820190508181036000830152610ccf81610c93565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206160008201527f6c6c6f77616e6365000000000000000000000000000000000000000000000000602082015250565b6000610d3260288361090d565b9150610d3d82610cd6565b604082019050919050565b60006020820190508181036000830152610d6181610d25565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610da282610a17565b9150610dad83610a17565b9250828203905081811115610dc557610dc4610d68565b5b92915050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000610e2760238361090d565b9150610e3282610dcb565b604082019050919050565b60006020820190508181036000830152610e5681610e1a565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b6000610eb960268361090d565b9150610ec482610e5d565b604082019050919050565b60006020820190508181036000830152610ee881610eac565b9050919050565b6000610efa82610a17565b9150610f0583610a17565b9250828201905080821115610f1d57610f1c610d68565b5b9291505056fea26469706673582212200d5e216a1c3fb3bc901237355b5f7416453ffbf656b380b344472f2ca2484c1464736f6c63430008110033";

type ERC20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20__factory extends ContractFactory {
  constructor(...args: ERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC20> {
    return super.deploy(name_, symbol_, overrides || {}) as Promise<ERC20>;
  }
  override getDeployTransaction(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name_, symbol_, overrides || {});
  }
  override attach(address: string): ERC20 {
    return super.attach(address) as ERC20;
  }
  override connect(signer: Signer): ERC20__factory {
    return super.connect(signer) as ERC20__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20Interface {
    return new utils.Interface(_abi) as ERC20Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): ERC20 {
    return new Contract(address, _abi, signerOrProvider) as ERC20;
  }
}
